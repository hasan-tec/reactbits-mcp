{
  "name": "Dock",
  "description": "An open source collection of high quality, animated, interactive & fully customizable React components for building stunning, memorable user interfaces.",
  "props": {},
  "dependencies": [],
  "url": "https://www.reactbits.dev/components/dock",
  "code": "1npm i framer-motion\n\n1import Dock from './Dock';\n2\n3  const items = [\n4    { icon: <VscHome size={18} />, label: 'Home', onClick: () => alert('Home!') },\n5    { icon: <VscArchive size={18} />, label: 'Archive', onClick: () => alert('Archive!') },\n6    { icon: <VscAccount size={18} />, label: 'Profile', onClick: () => alert('Profile!') },\n7    { icon: <VscSettingsGear size={18} />, label: 'Settings', onClick: () => alert('Settings!') },\n8  ];\n9\n10  <Dock \n11    items={items}\n12    panelHeight={68}\n13    baseItemSize={50}\n14    magnification={70}\n15  />\n\n1\"use client\";\n2\n3import {\n4  motion,\n5  useMotionValue,\n6  useSpring,\n7  useTransform,\n8  AnimatePresence,\n9} from \"framer-motion\";\n10import {\n11  Children,\n12  cloneElement,\n13  useEffect,\n14  useMemo,\n15  useRef,\n16  useState,\n17} from \"react\";\n18\n19import \"./Dock.css\";\n20\n21function DockItem({\n22  children,\n23  className = \"\",\n24  onClick,\n25  mouseX,\n26  spring,\n27  distance,\n28  magnification,\n29  baseItemSize,\n30}) {\n31  const ref = useRef(null);\n32  const isHovered = useMotionValue(0);\n33\n34  const mouseDistance = useTransform(mouseX, (val) => {\n35    const rect = ref.current?.getBoundingClientRect() ?? {\n36      x: 0,\n37      width: baseItemSize,\n38    };\n39    return val - rect.x - baseItemSize / 2;\n40  });\n41\n42  const targetSize = useTransform(\n43    mouseDistance,\n44    [-distance, 0, distance],\n45    [baseItemSize, magnification, baseItemSize]\n46  );\n47  const size = useSpring(targetSize, spring);\n48\n49  return (\n50    <motion.div\n51      ref={ref}\n52      style={{\n53        width: size,\n54        height: size,\n55      }}\n56      onHoverStart={() => isHovered.set(1)}\n57      onHoverEnd={() => isHovered.set(0)}\n58      onFocus={() => isHovered.set(1)}\n59      onBlur={() => isHovered.set(0)}\n60      onClick={onClick}\n61      className={`dock-item ${className}`}\n62      tabIndex={0}\n63      role=\"button\"\n64      aria-haspopup=\"true\"\n65    >\n66      {Children.map(children, (child) =>\n67        cloneElement(child, { isHovered })\n68      )}\n69    </motion.div>\n70  );\n71}\n72\n73function DockLabel({ children, className = \"\", ...rest }) {\n74  const { isHovered } = rest;\n75  const [isVisible, setIsVisible] = useState(false);\n76\n77  useEffect(() => {\n78    const unsubscribe = isHovered.on(\"change\", (latest) => {\n79      setIsVisible(latest === 1);\n80    });\n81    return () => unsubscribe();\n82  }, [isHovered]);\n83\n84  return (\n85    <AnimatePresence>\n86      {isVisible && (\n87        <motion.div\n88          initial={{ opacity: 0, y: 0 }}\n89          animate={{ opacity: 1, y: -10 }}\n90          exit={{ opacity: 0, y: 0 }}\n91          transition={{ duration: 0.2 }}\n92          className={`dock-label ${className}`}\n93          role=\"tooltip\"\n94          style={{ x: \"-50%\" }}\n95        >\n96          {children}\n97        </motion.div>\n98      )}\n99    </AnimatePresence>\n100  );\n101}\n102\n103function DockIcon({ children, className = \"\" }) {\n104  return <div className={`dock-icon ${className}`}>{children}</div>;\n105}\n106\n107export default function Dock({\n108  items,\n109  className = \"\",\n110  spring = { mass: 0.1, stiffness: 150, damping: 12 },\n111  magnification = 70,\n112  distance = 200,\n113  panelHeight = 68,\n114  dockHeight = 256,\n115  baseItemSize = 50,\n116}) {\n117  const mouseX = useMotionValue(Infinity);\n118  const isHovered = useMotionValue(0);\n119\n120  const maxHeight = useMemo(\n121    () => Math.max(dockHeight, magnification + magnification / 2 + 4),\n122    [magnification, dockHeight]\n123  );\n124  const heightRow = useTransform(isHovered, [0, 1], [panelHeight, maxHeight]);\n125  const height = useSpring(heightRow, spring);\n126\n127  return (\n128    <motion.div\n129      style={{ height, scrollbarWidth: \"none\" }}\n130      className=\"dock-outer\"\n131    >\n132      <motion.div\n133        onMouseMove={({ pageX }) => {\n134          isHovered.set(1);\n135          mouseX.set(pageX);\n136        }}\n137        onMouseLeave={() => {\n138          isHovered.set(0);\n139          mouseX.set(Infinity);\n140        }}\n141        className={`dock-panel ${className}`}\n142        style={{ height: panelHeight }}\n143        role=\"toolbar\"\n144        aria-label=\"Application dock\"\n145      >\n146        {items.map((item, index) => (\n147          <DockItem\n148            key={index}\n149            onClick={item.onClick}\n150            className={item.className}\n151            mouseX={mouseX}\n152            spring={spring}\n153            distance={distance}\n154            magnification={magnification}\n155            baseItemSize={baseItemSize}\n156          >\n157            <DockIcon>{item.icon}</DockIcon>\n158            <DockLabel>{item.label}</DockLabel>\n159          </DockItem>\n160        ))}\n161      </motion.div>\n162    </motion.div>\n163  );\n164}\n165\n\n1.dock-outer {\n2  margin: 0 0.5rem;\n3  display: flex;\n4  max-width: 100%;\n5  align-items: center;\n6}\n7\n8.dock-panel {\n9  position: absolute;\n10  bottom: 0.5rem;\n11  left: 50%;\n12  transform: translateX(-50%);\n13  display: flex;\n14  align-items: flex-end;\n15  width: fit-content;\n16  gap: 1rem;\n17  border-radius: 1rem;\n18  background-color: #060606;\n19  border: 1px solid #222;\n20  padding: 0 0.5rem 0.5rem;\n21}\n22\n23.dock-item {\n24  position: relative;\n25  display: inline-flex;\n26  align-items: center;\n27  justify-content: center;\n28  border-radius: 10px;\n29  background-color: #060606;\n30  border: 1px solid #222;\n31  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\n32    0 2px 4px -1px rgba(0, 0, 0, 0.06);\n33  cursor: pointer;\n34  outline: none;\n35}\n36\n37.dock-icon {\n38  display: flex;\n39  align-items: center;\n40  justify-content: center;\n41}\n42\n43.dock-label {\n44  position: absolute;\n45  top: -1.5rem;\n46  left: 50%;\n47  width: fit-content;\n48  white-space: pre;\n49  border-radius: 0.375rem;\n50  border: 1px solid #222;\n51  background-color: #060606;\n52  padding: 0.125rem 0.5rem;\n53  font-size: 0.75rem;\n54  color: #fff;\n55  transform: translateX(-50%);\n56}\n\n1\"use client\";\n2\n3import {\n4  motion,\n5  useMotionValue,\n6  useSpring,\n7  useTransform,\n8  AnimatePresence,\n9} from \"framer-motion\";\n10import {\n11  Children,\n12  cloneElement,\n13  useEffect,\n14  useMemo,\n15  useRef,\n16  useState,\n17} from \"react\";\n18\n19function DockItem({\n20  children,\n21  className = \"\",\n22  onClick,\n23  mouseX,\n24  spring,\n25  distance,\n26  magnification,\n27  baseItemSize,\n28}) {\n29  const ref = useRef(null);\n30  const isHovered = useMotionValue(0);\n31\n32  const mouseDistance = useTransform(mouseX, (val) => {\n33    const rect = ref.current?.getBoundingClientRect() ?? {\n34      x: 0,\n35      width: baseItemSize,\n36    };\n37    return val - rect.x - baseItemSize / 2;\n38  });\n39\n40  const targetSize = useTransform(\n41    mouseDistance,\n42    [-distance, 0, distance],\n43    [baseItemSize, magnification, baseItemSize]\n44  );\n45  const size = useSpring(targetSize, spring);\n46\n47  return (\n48    <motion.div\n49      ref={ref}\n50      style={{\n51        width: size,\n52        height: size,\n53      }}\n54      onHoverStart={() => isHovered.set(1)}\n55      onHoverEnd={() => isHovered.set(0)}\n56      onFocus={() => isHovered.set(1)}\n57      onBlur={() => isHovered.set(0)}\n58      onClick={onClick}\n59      className={`relative inline-flex items-center justify-center rounded-full bg-[#060606] border-neutral-700 border-2 shadow-md ${className}`}\n60      tabIndex={0}\n61      role=\"button\"\n62      aria-haspopup=\"true\"\n63    >\n64      {Children.map(children, (child) =>\n65        cloneElement(child, { isHovered })\n66      )}\n67    </motion.div>\n68  );\n69}\n70\n71function DockLabel({ children, className = \"\", ...rest }) {\n72  const { isHovered } = rest;\n73  const [isVisible, setIsVisible] = useState(false);\n74\n75  useEffect(() => {\n76    const unsubscribe = isHovered.on(\"change\", (latest) => {\n77      setIsVisible(latest === 1);\n78    });\n79    return () => unsubscribe();\n80  }, [isHovered]);\n81\n82  return (\n83    <AnimatePresence>\n84      {isVisible && (\n85        <motion.div\n86          initial={{ opacity: 0, y: 0 }}\n87          animate={{ opacity: 1, y: -10 }}\n88          exit={{ opacity: 0, y: 0 }}\n89          transition={{ duration: 0.2 }}\n90          className={`${className} absolute -top-6 left-1/2 w-fit whitespace-pre rounded-md border border-neutral-700 bg-[#060606] px-2 py-0.5 text-xs text-white`}\n91          role=\"tooltip\"\n92          style={{ x: \"-50%\" }}\n93        >\n94          {children}\n95        </motion.div>\n96      )}\n97    </AnimatePresence>\n98  );\n99}\n100\n101function DockIcon({ children, className = \"\" }) {\n102  return (\n103    <div className={`flex items-center justify-center ${className}`}>\n104      {children}\n105    </div>\n106  );\n107}\n108\n109export default function Dock({\n110  items,\n111  className = \"\",\n112  spring = { mass: 0.1, stiffness: 150, damping: 12 },\n113  magnification = 70,\n114  distance = 200,\n115  panelHeight = 64,\n116  dockHeight = 256,\n117  baseItemSize = 50,\n118}) {\n119  const mouseX = useMotionValue(Infinity);\n120  const isHovered = useMotionValue(0);\n121\n122  const maxHeight = useMemo(\n123    () => Math.max(dockHeight, magnification + magnification / 2 + 4),\n124    [magnification, dockHeight]\n125  );\n126  const heightRow = useTransform(isHovered, [0, 1], [panelHeight, maxHeight]);\n127  const height = useSpring(heightRow, spring);\n128\n129  return (\n130    <motion.div\n131      style={{ height, scrollbarWidth: \"none\" }}\n132      className=\"mx-2 flex max-w-full items-center\"\n133    >\n134      <motion.div\n135        onMouseMove={({ pageX }) => {\n136          isHovered.set(1);\n137          mouseX.set(pageX);\n138        }}\n139        onMouseLeave={() => {\n140          isHovered.set(0);\n141          mouseX.set(Infinity);\n142        }}\n143        className={`${className} absolute bottom-2 left-1/2 transform -translate-x-1/2 flex items-end w-fit gap-4 rounded-2xl border-neutral-700 border-2 pb-2 px-4`}\n144        style={{ height: panelHeight }}\n145        role=\"toolbar\"\n146        aria-label=\"Application dock\"\n147      >\n148        {items.map((item, index) => (\n149          <DockItem\n150            key={index}\n151            onClick={item.onClick}\n152            className={item.className}\n153            mouseX={mouseX}\n154            spring={spring}\n155            distance={distance}\n156            magnification={magnification}\n157            baseItemSize={baseItemSize}\n158          >\n159            <DockIcon>{item.icon}</DockIcon>\n160            <DockLabel>{item.label}</DockLabel>\n161          </DockItem>\n162        ))}\n163      </motion.div>\n164    </motion.div>\n165  );\n166}\n167",
  "category": "components",
  "scrapedAt": "2025-04-27T11:46:47.407Z",
  "previewImage": "dock-preview.png"
}