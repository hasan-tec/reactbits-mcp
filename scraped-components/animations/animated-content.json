{
  "name": "Animated Content",
  "description": "An open source collection of high quality, animated, interactive & fully customizable React components for building stunning, memorable user interfaces.",
  "props": {},
  "dependencies": [],
  "url": "https://www.reactbits.dev/animations/animated-content",
  "code": "1npm install @react-spring/web\n\n1import AnimatedContent from './AnimatedContent'\n2\n3<AnimatedContent\n4  distance={150}\n5  direction=\"horizontal\"\n6  reverse={false}\n7  config={{ tension: 80, friction: 20 }}\n8  initialOpacity={0.2}\n9  animateOpacity\n10  scale={1.1}\n11  threshold={0.2}\n12>\n13  <div>Content to Animate</div>\n14</AnimatedContent>\n\n1import { useRef, useEffect, useState } from \"react\";\n2import { useSpring, animated } from \"@react-spring/web\";\n3\n4const AnimatedContent = ({\n5  children,\n6  distance = 100,\n7  direction = \"vertical\",\n8  reverse = false,\n9  config = { tension: 50, friction: 25 },\n10  initialOpacity = 0,\n11  animateOpacity = true,\n12  scale = 1,\n13  threshold = 0.1,\n14  delay = 0\n15}) => {\n16  const [inView, setInView] = useState(false);\n17  const ref = useRef();\n18\n19  useEffect(() => {\n20    if (!ref.current) return;\n21\n22    const observer = new IntersectionObserver(\n23      ([entry]) => {\n24        if (entry.isIntersecting) {\n25          observer.unobserve(ref.current);\n26          setTimeout(() => {\n27            setInView(true);\n28          }, delay);\n29        }\n30      },\n31      { threshold }\n32    );\n33\n34    observer.observe(ref.current);\n35\n36    return () => observer.disconnect();\n37  }, [threshold, delay]);\n38\n39  const directions = {\n40    vertical: \"Y\",\n41    horizontal: \"X\",\n42  };\n43\n44  const springProps = useSpring({\n45    from: {\n46      transform: `translate${directions[direction]}(${reverse ? `-${distance}px` : `${distance}px`}) scale(${scale})`,\n47      opacity: animateOpacity ? initialOpacity : 1,\n48    },\n49    to: inView\n50      ? {\n51        transform: `translate${directions[direction]}(0px) scale(1)`,\n52        opacity: 1,\n53      }\n54      : undefined,\n55    config,\n56  });\n57\n58  return (\n59    <animated.div ref={ref} style={springProps}>\n60      {children}\n61    </animated.div>\n62  );\n63};\n64\n65export default AnimatedContent;\n66",
  "category": "animations",
  "scrapedAt": "2025-04-27T11:48:57.378Z",
  "previewImage": "animated-content-preview.png"
}